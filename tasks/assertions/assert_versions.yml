---

- name: Assert 'version' variable for type 'platforms'
  ansible.builtin.assert:
    that:
      - item.version is match("^android-[0-9]+$") 
    fail_msg: "Type 'platforms' must have version pattern 'android-<version>'"
  when:
    - item.type == "platforms" 


- name: Assert 'version' variable for type 'build-tools'
  ansible.builtin.assert:
    that:
      - item.version is match("^[0-9]+.[0-9]+.[0-9]+$") 
    fail_msg: "Type 'build-tools' must have version pattern '<major>.<minor>.<build>'"
  when:
    - item.type == "build-tools" 


- name: Assert 'version' variable for type 'cmdline-tools'
  ansible.builtin.assert:
    that:
      - item.version is match("^[0-9]+.[0-9]+.[0-9]+$|^latest$") 
    fail_msg: "Type 'cmdline-tools' must have version pattern '<major>.<minor>.<build>' or 'latest'"
  when:
    - item.type == "cmdline-tools" 


- name: Assert 'version' variable for type 'platform-tools'
  ansible.builtin.assert:
    that:
      - item.version is match("^[0-9]+.[0-9]+.[0-9]+$") 
    fail_msg: "Type 'platform-tools' must have version pattern '<major>.<minor>.<build>'"
  when:
    - item.type == "platform-tools" 


- name: Assert 'version' variable for type 'ndk'
  ansible.builtin.assert:
    that:
      - item.version is match("^[0-9]+.[0-9]+.[0-9]+$") 
    fail_msg: "Type 'ndk' must have version pattern '<major>.<minor>.<build>'"
  when:
    - item.type == "ndk" 


- name: Assert 'version' variable for type 'cmake'
  ansible.builtin.assert:
    that:
      - item.version is match("^[0-9]+.[0-9]+$")
    fail_msg: "Type 'cmake' must have version pattern '<major>.<minor>'"
  when:
    - item.type == "cmake"